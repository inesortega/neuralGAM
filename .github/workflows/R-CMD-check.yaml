on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Set up Python (only for Windows and macOS)
        if: runner.os != 'ubuntu-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies (only for Ubuntu)
        if: runner.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y python3-pip python3-venv

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.10"
          miniconda-version: "latest"

      - name: Set up Conda environment
        run: |
          conda create --name neuralGAM-env python=3.10

      - name: Set up Python and R dependencies
        shell: Rscript {0}
        run: |
          library(tensorflow)
          tensorflow::install_tensorflow(version = "2.13", method = "conda", envname = "neuralGAM-env")
          library(keras)
          keras::install_keras(version = "2.13", method = "conda", envname = "neuralGAM-env")

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          args: 'c("--no-manual", "--as-cran", "--run-dontrun")'
