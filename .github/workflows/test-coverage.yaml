# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - if: runner.os == 'ubuntu-latest'
        name: setup python3-venv
        run: |
          sudo apt-get install -y python3-pip python3-venv

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.10"

      - name: Set up conda environment
        run: |
          conda create --name neuralGAM-env python=3.10

      - name: Set up python requirements
        shell: Rscript {0}
        run: |
          library(tensorflow)
          tensorflow::install_tensorflow(version = "2.13", method = "conda", envname = "neuralGAM-env")
          library(keras)
          keras::install_keras(version = "2.13", method = "conda", envname = "neuralGAM-env")


      - name: Test coverage
        run: |
          cov <- covr::package_coverage()
          covr::codecov(coverage = cov, quiet = FALSE, clean = FALSE)
          covr::to_cobertura(cov, "coverage.xml")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          files: coverage.xml

