# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Create virtualenv and install requirements
        shell: bash
        run: |
          set -e
          if [ "${{ runner.os }}" = "Windows" ]; then
            python -m venv neuralGAM-venv
            ./neuralGAM-venv/Scripts/python.exe -m pip install --upgrade pip
            ./neuralGAM-venv/Scripts/python.exe -m pip install -r python-req.txt
            echo "RETICULATE_PYTHON=$PWD/neuralGAM-venv/Scripts/python.exe" >> $GITHUB_ENV
          else
            python -m venv neuralGAM-venv
            ./neuralGAM-venv/bin/python -m pip install --upgrade pip
            ./neuralGAM-venv/bin/python -m pip install -r python-req.txt
            echo "RETICULATE_PYTHON=$PWD/neuralGAM-venv/bin/python" >> $GITHUB_ENV
          fi

      # Make RETICULATE_PYTHON persist for R sessions (Unix)
      - name: Persist RETICULATE_PYTHON for R (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          echo "RETICULATE_PYTHON=$PWD/neuralGAM-venv/bin/python" >> ~/.Renviron
          echo "RETICULATE_PYTHON set to $(grep RETICULATE_PYTHON ~/.Renviron)"

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Set up python requirements
        shell: Rscript {0}
        run: |
          library(tensorflow)
          tensorflow::install_tensorflow(version = "2.15", method = "virtualenv", envname = "neuralGAM-venv")
          library(keras)
          keras::install_keras(version = "2.13", method = "virtualenv", envname = "neuralGAM-venv")

      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          files: coverage.xml

