name: test-coverage

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      # System requirements for xml2
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          # install covr + xml2 at R level
          extra-packages: any::covr, any::xml2
          needs: coverage

      - name: setup python3-venv (optional)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y python3-pip python3-venv

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10"

      - name: Set up conda environment
        run: conda create --name neuralGAM-env python=3.10 -y

      - name: Set up python requirements (TF/Keras via conda)
        shell: Rscript {0}
        run: |
          library(tensorflow)
          tensorflow::install_tensorflow(version = "2.15", method = "conda", envname = "neuralGAM-env")
          library(keras)
          keras::install_keras(version = "2.15", method = "conda", envname = "neuralGAM-env")

      - name: Test coverage (generate coverage.xml only)
        shell: Rscript {0}
        run: |
          cov <- covr::package_coverage()
          print(cov)
          covr::to_cobertura(cov, "coverage.xml")

      - name: Show testthat output
        if: always()
        shell: bash
        run: |
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true

      - name: Upload test results (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
          verbose: true
