% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoplot.neuralGAM.R
\name{autoplot.neuralGAM}
\alias{autoplot.neuralGAM}
\title{Plot smooth terms from a fitted \code{neuralGAM} model}
\usage{
\method{autoplot}{neuralGAM}(object, select, xlab = NULL, ylab = NULL, ...)
}
\arguments{
\item{object}{A fitted \code{neuralGAM} object.}

\item{select}{Character string. Name of the smooth term to plot (e.g., \code{"x1"}).
Must match a smooth term in the model.}

\item{xlab}{if supplied, this value will be used as the \code{x} label for all plots.}

\item{ylab}{if supplied, this value will be used as the \code{y} label for all plots.}

\item{...}{Additional arguments passed to \code{\link{predict.neuralGAM}} or \code{ggplot2} layers.}
}
\value{
A \code{ggplot} object showing:
\itemize{
\item The mean prediction for the smooth term (\code{y_hat}) as a line.
\item If available, a ribbon showing the prediction interval between \code{lwr} and \code{upr}.
}
}
\description{
Produces a \code{ggplot} visualization of a smooth term from a fitted \code{neuralGAM} model.
If the model was trained with prediction intervals (\code{BUILD_PI = TRUE}),
the plot automatically includes a shaded ribbon showing the prediction interval
between the lower (\code{lwr}) and upper (\code{upr}) bounds.
}
\details{
The function automatically detects if prediction intervals are present in the model's output
(i.e., when \code{BUILD_PI = TRUE}) and adds a ribbon layer to the plot.
If intervals are not available, only the smooth function is plotted.

The \code{select} argument controls which smooth term is visualized.
If you want to visualize all smooth terms at once, consider writing a loop or wrapper
that calls \code{autoplot()} for each term.
}
\examples{
\dontrun{
n <- 24500

seed <- 42
set.seed(seed)

x1 <- runif(n, -2.5, 2.5)
x2 <- runif(n, -2.5, 2.5)
x3 <- runif(n, -2.5, 2.5)

f1 <- x1 ** 2
f2 <- 2 * x2
f3 <- sin(x3)
f1 <- f1 - mean(f1)
f2 <- f2 - mean(f2)
f3 <- f3 - mean(f3)

eta0 <- 2 + f1 + f2 + f3
epsilon <- rnorm(n, 0.25)
y <- eta0 + epsilon
train <- data.frame(x1, x2, x3, y)

library(neuralGAM)
ngam <- neuralGAM(y ~ s(x1) + x2 + s(x3), data = train,
                 num_units = 1024, family = "gaussian",
                 activation = "relu",
                 learning_rate = 0.001, bf_threshold = 0.001,
                 max_iter_backfitting = 10, max_iter_ls = 10,
                 seed = seed
                 )
autoplot(ngam, select="x1")

# add custom title
autoplot(ngam, select="x1") + ggplot2::ggtitle("Main Title")
# add labels
autoplot(ngam, select="x1") + ggplot2::xlab("test") + ggplot2::ylab("my y lab")
# plot multiple terms:
plots <- lapply(c("x1", "x2", "x3"), function(x) autoplot(ngam, select = x))
gridExtra::grid.arrange(grobs = plots, ncol = 3, nrow = 1)
}
}
\author{
Ines Ortega-Fernandez, Marta Sestelo.
}
